{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC9BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBoB,SAAEP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWZM,GAXY,4CAAH,sDCWLO,EATM,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACE,yBAAQc,UAAU,yCAAlB,UACE,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,qCAAaA,QCoBJO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAACpB,IAEGqB,EDlB2BK,CAAc1B,GAAlCa,EAFkB,EAExBN,KAAca,EAFU,EAEVA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,EAAS2B,gBAC3DP,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,sBAAMA,UAAU,YAAhB,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,aESRiB,EArBO,WAAO,IAAD,EAEU1C,mBAAS,CAAC,WAFpB,mBAEnBQ,EAFmB,KAEPT,EAFO,KAG1B,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCRlB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.97bf774e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ( e ) => {\r\n    setInputValue(e.target.value); \r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length >= 2) {\r\n      setCategories( categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={ inputValue } \r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=12&api_key=W61XaNXLmlSYZ2bN50dtgHiOklben61Q`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map ( img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    });\r\n    return gifs;\r\n  }","import React from 'react'\r\n\r\nconst GiftGridItem = ({ title, url }) => {\r\n  return (\r\n    <figure className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={title}/>\r\n      <figcaption>{title}</figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default GiftGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category.toUpperCase() }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n      <main className=\"card-grid\">\r\n        {\r\n          images.map( (img) => (\r\n            <GiftGridItem \r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n        \r\n      });\r\n\r\n  }, [category]);\r\n  \r\n  return state;\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Naruto']);\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n            key={ category }\r\n            category={ category }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}