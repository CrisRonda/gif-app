{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["options","value","label","AddCategory","setParams","useState","inputValue","setInputValue","limit","setLimit","ref","useRef","useEffect","current","focus","onSubmit","e","preventDefault","trim","length","category","style","display","justifyContent","id","maxWidth","width","placeholder","bottomHelpText","onChange","target","marginLeft","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","Footer","className","icon","faHeart","faShareAlt","GiftGridItem","small","medium","hideImage","margin","footer","flex","src","alt","defaultProps","GifGrid","loading","state","setState","then","imgs","useFetchGifs","toUpperCase","GiftExpertApp","initialState","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e12ab612.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Select } from \"react-rainbow-components\";\n\nconst options = [\n  { value: 10, label: \"10\" },\n  { value: 20, label: \"20\" },\n  { value: 30, label: \"30\" },\n];\n\nconst AddCategory = ({ setParams }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [limit, setLimit] = useState(10);\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (inputValue) setParams({ category: inputValue, limit });\n  // }, [inputValue, limit, setParams]);\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length >= 2) {\n      setParams({ category: inputValue, limit });\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{ display: \"flex\", justifyContent: \"center\" }}\n    >\n      <Input\n        id=\"input\"\n        ref={ref}\n        label=\"Search\"\n        style={{ maxWidth: 700, width: \"80%\" }}\n        placeholder=\"Search your Gift\"\n        bottomHelpText=\"ex: Shaman King\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n      <Select\n        label=\"By\"\n        value={limit}\n        onChange={({ target: { value } }) => setLimit(value)}\n        options={options}\n        style={{ maxWidth: 356, marginLeft: 8 }}\n        // className=\"rainbow-m-vertical_x-large rainbow-p-horizontal_medium rainbow-m_auto\"\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setParams: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async ({ category, limit = 10 }) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=${limit}&api_key=W61XaNXLmlSYZ2bN50dtgHiOklben61Q`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, ButtonIcon } from \"react-rainbow-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShareAlt,\n  faAirFreshener as faHeart,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Footer = () => (\n  <div className=\"rainbow-align-content_space-between\">\n    <div className=\"rainbow-flex\">\n      <ButtonIcon\n        icon={<FontAwesomeIcon icon={faHeart} />}\n        className=\"rainbow-m-right_xx-small\"\n      />\n      <ButtonIcon icon={<FontAwesomeIcon icon={faShareAlt} />} />\n    </div>\n  </div>\n);\n\nconst GiftGridItem = ({ title, url, small, medium, hideImage }) => {\n  let style = { margin: \"24px 0 \", maxWidth: 600 };\n  if (small) {\n    style = { margin: \"24px 0 \", maxWidth: 300 };\n  }\n  if (medium) {\n    style = { margin: \"24px 0 \", maxWidth: 450 };\n  }\n  return (\n    <Card\n      title={title}\n      style={style}\n      className={\"card animate__animated animate__fadeIn\"}\n      footer={<Footer />}\n    >\n      <figure>\n        {!hideImage && (\n          <img style={{ flex: 1, width: \"100%\" }} src={url} alt={title} />\n        )}\n        <figcaption>{title}</figcaption>\n      </figure>\n    </Card>\n  );\n};\nGiftGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  hideImage: PropTypes.bool,\n};\nGiftGridItem.defaultProps = {\n  small: false,\n  medium: false,\n  hideImage: false,\n};\nexport { GiftGridItem, Footer };\nexport default GiftGridItem;\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GiftGridItem from \"./GiftGridItem\";\n\nimport PropTypes from \"prop-types\";\n\nconst GifGrid = ({ category, limit }) => {\n  const { data: images, loading } = useFetchGifs({ category, limit });\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">\n        {category.toUpperCase()}\n      </h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <main className=\"card-grid\">\n        {images.map((img) => (\n          <GiftGridItem key={img.id} {...img} />\n        ))}\n      </main>\n    </>\n  );\n};\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n  limit: PropTypes.any.isRequired,\n};\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\nimport PropTypes from \"prop-types\";\n\nconst GiftExpertApp = ({ initialState }) => {\n  const [params, setParams] = useState(initialState);\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setParams={setParams} />\n      <ol>\n        <GifGrid category={params.category} limit={params.limit} />\n      </ol>\n    </>\n  );\n};\nGiftExpertApp.propTypes = {\n  initialState: PropTypes.shape(),\n};\n\nGiftExpertApp.defaultProps = {\n  initialState: {\n    category: \"Rainbow\",\n    limit: 10,\n  },\n};\nexport default GiftExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}